#服务名称
spring.application.name=springcloud-eureka-client
#服务端口号
server.port=8762
#注册地址（添加了安全验证）
eureka.client.serviceUrl.defaultZone=http://zhaoxin1:zhaoxin1@localhost:8761/eureka/
#本机IP地址(写多少显示多少，启动项目时需要动态传入192.168.12.8755)但是填写错误，通过服务名访问时会报错
eureka.instance.ip-address=192.168.0.105
#eureka页面显示主机IP不显示主机操作系统信息(访问的路径变为 IP 地址)
eureka.instance.prefer-ip-address=true
#eureka显示信息格式(ip加端口)
eureka.instance.instance-id=${eureka.instance.ip-address}:${server.port}
#-----------------------------------------------------------------------------------
#在注册服务之后，服务提供者会维护一个心跳用来持续告诉Eureka Server，"我还在持续提供服务"，
#否则Eureka Server的剔除任务会将该服务实例从服务列表中排除出去。我们称之为服务续约。
#下面两个就是服务续约中最重要的两个属性配置(建议不要更改续约间隔!!!)
 
#表示eureka server至上一次收到client的心跳之后，（默认是90秒）
#等待下一次心跳的超时时间，在这个时间内若没收到下一次心跳，则将移除该instance
#如果该值太大，则很可能将流量转发过去的时候，该instance已经不存活了。
#如果该值设置太小了，则instance则很可能因为临时的网络抖动而被摘除掉。
#该值至少应该大于lease-Renewal-Interval-In-Seconds
eureka.instance.lease-expiration-duration-in-seconds=90 
#表示eureka client发送心跳给server端的频率（默认是30秒）。如果在leaseExpirationDurationInSeconds后，
#server端没有收到client的心跳，则将摘除该instance。除此之外，如果该instance实现了HealthCheckCallback，
#并决定让自己unavailable的话，则该instance也不会接收到流量。
eureka.instance.lease-renewal-interval-in-seconds=30
#-----------------------------------------------------------------------------------
#热部署生效
spring.devtools.restart.enabled=true
#实现页面热部署
#spring.thymeleaf.cache=false
#-----------------------------------------------------------------------------------
#解决读取配置文件乱码问题(不生效)
#server.tomcat.uri-encoding=UTF-8
#spring.http.encoding.charset=UTF-8
#spring.http.encoding.enabled=true
#spring.http.encoding.force=true
#spring.messages.encoding=UTF-8

